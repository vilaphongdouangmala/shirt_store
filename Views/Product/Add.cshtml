<q-card>
    <q-card-section>
        <div class="text-h6">Add a new Product</div>
    </q-card-section>
    <q-card-section>
        <q-input 
            v-model="addingProduct.productName" 
            type="text" 
            label="Product Name" 
            lazy-rules
            :rules="[ val => val && val.length > 0 || 'Please type something']">
        </q-input>
        <q-input 
            v-model="addingProduct.productCost" 
            type="text" 
            label="Product Cost" 
            lazy-rules
            :rules="[ val => val && val.length > 0 || 'Please type something']">
        </q-input>
        <q-select class="q-mb-lg" v-model="selectedCategory" label="Product Category" :options="productCategories" option-value="productCategory" option-label="categoryName"></q-select>
        <q-btn class="q-mr-md" color="standard" text-color="black" label="Back" @@click="redirectToMainPage"></q-btn>
        <q-btn color="dark" label="Submit" @@click="addProduct"></q-btn>
    </q-card-section>
</q-card>


@section code{
    <script>
        var option = {
            //data
            data(){
                return {
                    productCategories: []
                    ,
                    addingProduct: {
                        productName: "",
                        productCost: 0,
                        productCategoryId: 0
                    },
                    selectedCategory: {}
                };
            }
            ,
            //methods
            methods:{
                async addProduct() {
                    //replace categoryId
                    this.addingProduct.productCategoryId = this.selectedCategory.productCategoryId;
                    console.log(this.addingProduct);
                    var url = "/api/addproduct";
                    try {
                        var res = await axios.post(url, this.addingProduct);
                        console.log(res.data.msg);
                        //redirect back to main after finish adding
                        this.redirectToMainPage();
                    }
                    catch(error) {
                        console.log(error);
                    }
                }//ef
                ,
                async getAddingProductSelections() {
                    var url = "/api/getProductSelections";
                    try {
                        var res = await axios.get(url);
                        //assign for categories for showing in dropdown selection
                        this.productCategories = res.data.categories;
                        //set the default value
                        this.selectedCategory = this.productCategories.length > 0 ? this.productCategories[0] : null;
                    }
                    catch(error) {
                        console.log(error);
                    }
                }//ef
                ,
                redirectToMainPage() {
                    window.location = "/product/index";
                }//ef
            }///emethod
            ,
            //computed
            computed:{

            }
            ,
            //created
            //the data is loaded on created() function instead of mounted() because created() is executed before the UI is rendered, therefore, it can load the data before all the UIs are completely loaded to increase data loading speed.
            async created(){
                //get all adding production selection information (sizes, colors, categories)
                await this.getAddingProductSelections();
                console.log(this.addingProduct.productCategory);
            }//ecreated
            ,
            //mounted
            mounted(){  
            }

        };
        
        const app = Vue.createApp(option);
        app.use(Quasar);
        app.mount('#app');
    </script>
}